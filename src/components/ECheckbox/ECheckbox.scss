@use 'sass:math';
@import '../../theme/imports';

@mixin checkbox-highlight($color) {
  .#{c('ECheckbox') + e('box')} {
    border-color: color($color, 8);
  }
  input:disabled .#{c('ECheckbox') + e('box')} {
    border-color: color($color, 3);
  }
}

@mixin checkbox-size($suffix, $size) {
  &.#{c('ECheckbox') + m($suffix)} {
    .#{c('ECheckbox') + e('inner')} .#{c('ECheckbox') + e('context')} {
      margin-left: calc($size + v(spacing-xs));
    }

    .#{c('ECheckbox') + e('box')} {
      width: $size;
      height: $size;
      font-size: $size;
    }

    input {
      width: $size;
      height: $size;
    }
  }
}

@mixin checkbox-color($color) {
  &.#{c('ECheckbox') + m('highlight')} {
    @include checkbox-highlight($color);
  }

  input {
    &:checked {
      + .#{c('ECheckbox') + e('box')} {
        background-color: color($color, 8);
        border-color: color($color, 9);
        color: v(contrast-color);
      }
    }

    &:focus {
      + .#{c('ECheckbox') + e('box')} {
        border-color: color($color, 8);
        box-shadow: 0 0 0 v(focus-shadow-size, c('ECheckbox'))
          color($color, 'T20');
      }
    }

    &:disabled:checked {
      + .#{c('ECheckbox') + e('box')} {
        border-color: color($color, 5);
        background-color: color($color, 4);
        color: v(contrast-color--disabled);
      }
    }

    &:disabled:not(:checked) {
      + .#{c('ECheckbox') + e('box')} {
        background-color: v(background-color--disabled);
      }
    }
  }
}

.#{c('ECheckbox')} {
  display: inline-flex;
  position: relative;
  align-items: center;

  // https://stackoverflow.com/questions/48117071/element-with-display-inline-flex-has-a-strange-top-margin
  vertical-align: middle;

  &.#{c('ECheckbox') + m('block')} {
    width: 100%;
    display: flex;
  }

  .#{c('ECheckbox') + e('box')} {
    flex-shrink: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    border: v(border-width, c('ECheckbox')) solid
      v(border-color, c('ECheckbox'));
    background-color: v(background-color);
    border-radius: v(border-radius, c('ECheckbox'));
    box-shadow: 0 0 0 v(focus-shadow-size) transparent;
    line-height: v(line-height, c('ECheckbox'));
    transition: border-color v(transition-time) v(transition-type),
      background-color v(transition-time) v(transition-type),
      box-shadow v(transition-time) v(transition-type);

    color: transparent;

    .#{c('ECheckbox') + e('icon')} {
      display: flex;
      align-items: center;
      justify-content: center;
      transition: color v(transition-time) v(transition-type);
    }
  }

  .#{c('ECheckbox') + e('inner')} {
    > div:first-of-type {
      display: flex;
      align-items: center;

      .#{c('EFormControl') + e('label')} {
        display: block;
        margin-bottom: 0;
        padding-left: v(spacing-xs);
      }
    }
  }

  input {
    position: absolute;
    margin: 0;
    opacity: 0;
    z-index: 1;
  }

  @mixin checkbox-variant($variant) {
    &.#{c('ECheckbox') + m($variant)} {
      @include checkbox-color($variant);
    }
  }

  @each $variant in $e-palettes {
    @include checkbox-variant($variant);
  }

  &.#{c('ECheckbox') + m('feedback-error')} {
    @include checkbox-color('error');

    &.#{c('ECheckbox') + m('highlight')} {
      @include checkbox-highlight('error');
    }
  }

  &.#{c('ECheckbox') + m('feedback-success')} {
    @include checkbox-color('success');

    &.#{c('ECheckbox') + m('highlight')} {
      @include checkbox-highlight('success');
    }
  }

  @include checkbox-size('md', v(size, c('ECheckbox')));
  @include checkbox-size('sm', v(size-sm, c('ECheckbox')));
  @include checkbox-size('lg', v(size-lg, c('ECheckbox')));
}
